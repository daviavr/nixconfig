(defcfg
  process-unmapped-keys yes
)

(deflocalkeys-linux
  ´ 26
  [ 27
  ç 39
  ~ 40
  ' 41
  ] 43
  ; 53
  \ 86
  / 89
)

(defsrc ;; abnt2
  esc    1     2    3    4    5    6    7    8    9    0    -    =   bspc
  tab  q     w    e    r    t    y    u    i    o    p    ´    [   ret
  caps a     s    d    f    g    h    j    k    l    ç    ~    ]
  lsft \     z    x    c    v    b    n    m    ,    .    ;  /  rsft
  lctl lmet lalt           spc                ralt comp rctl
)

(deflayer qwerty-abnt2
  @esc    1     2    3    4    5    6    7    8    9    0    -    =   bspc
  tab  q     w    e    r    t    y    u    i    o    p    ´    [   ret
  @caps a     s    d    f    g    h    j    k    l    ç    ~    ]
  lsft \     z    x    c    v    b    n    m    ,    .    ;  /  rsft
  lctl lmet lalt           spc                @ralt comp rctl
)

(defvar
 ht 100
 mindinho.tt 65
 anelar.tt 55
 medio.tt 56
 indicador.tt 56
)

(defalias
  onlycaps (multi f24 (layer-toggle caps-overrides))
  caps (multi f24 (tap-hold-press $mindinho.tt $ht caps (layer-toggle caps-overrides)))
)

(deflayermap (caps-overrides)
  h left
  j down
  k up
  l rght
  u C-u
  d C-d
  bspc del
  ç home
  ~ end
  ralt lrld
)

(defalias
  ralt (tap-dance 300 ((layer-switch qwerty-abnt2) (layer-switch programmer)))
  esc (fork esc RS-grv (lsft))
)


(deftemplate ow.keys (original-action new-action real-key)
  (switch 
    ((and nop1 (input-history real $real-key 1))) $new-action break
    ((and lsft (input-history real $real-key 1))) (multi (unshift $real-key) $new-action) break 
    (lsft) $new-action break
    () $original-action break
  )
)


(defalias
  caret (macro RS-~ spc)
  cir (macro RS-~ spc) ;; acento circunflexo
  crase (macro RS-´ spc)
  tiu (macro (unshift ~) spc)
  percen RS-5
  ltan RS-,
  gtan RS-.
  qmark RS-/

  1  (t! ow.keys + 1 1)
  2 (t! ow.keys [ 2 2)
  3 (t! ow.keys RS-[ 3 3)
  4 (t! ow.keys RS-9 4 4)
  5 (t! ow.keys = 5 5)
  6 (t! ow.keys RS-7 6 6)
  7 (t! ow.keys RS-0 7 7)
  8 (t! ow.keys RS-] 8 8)
  9 (t! ow.keys ] 9 9)
  0 (t! ow.keys @crase 0 0)
  excl (t! ow.keys RS-1 @caret nop0) ;; ! | ^ 
  at (t! ow.keys RS-2 RS-2 nop0) ;; @ | @
  dollar (t! ow.keys RS-4 RS-8 nop0) ;; $ | *
  fslash (t! ow.keys / @tiu nop0) ;; / | ~ 
  hash (t! ow.keys RS-3 @percen nop0) ;; # | %
  dot (t! ow.keys . @ltan nop0) ;; . | <
  comma (t! ow.keys , @gtan nop0) ;; , | >
)

(defvar
  num.keys (1 2 3 4 5 6 7 8 9 0) 
)

(defvirtualkeys
  pseudo.sft nop1
)

(deflayer programmer
  @esc    @1     @2    @3    @4    @5   @6     @7    @8    @9    @0    @excl    @at   bspc
  _  _     _    _    _    _    _    _    _    _    _    grv    @dollar  _ 
  @onlycaps _     _    _    _    _    _    _    _    _    ;    @fslash    @hash
  _ _     _    _    _    _    _    _    _    -    @dot    @comma  _  _ 
  _ _ _           spc                @ralt _  rctl
)
